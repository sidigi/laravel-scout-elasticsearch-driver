version: "3"

networks:
  laravel:

services:
  site:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: elastic
      MYSQL_USER: elastic
      MYSQL_PASSWORD: secret
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - laravel

  elastic:
    image: elasticsearch:6.8.12
    container_name: es
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    ports:
      - 9200:9200
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: php
    volumes:
      - ./:/var/www/html:delegated
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel
    entrypoint: ["composer", "--ignore-platform-reqs"] # Install without other php modules required

  npm:
    image: node:latest
    container_name: npm
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]

  artisan:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: artisan
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel

volumes:
  mysql:
    driver: local
